{"version":3,"sources":["components/Header/index.js","components/Main/DataArea/Headings/index.js","components/Main/DataArea/Table/index.js","components/Search/SearchBar/index.js","components/Search/index.js","utils/API.js","components/Main/DataArea/index.js","components/Main/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Headings","props","headings","map","hname","width","style","data-key","cursor","onClick","handleSort","Table","users","formatDate","date","newDate","slice","YYYY","undefined","name","login","picture","phone","email","dob","src","medium","alt","first","last","href","target","uuid","SearchBar","handleInputChange","type","placeholder","aria-label","onChange","Search","axios","get","DataArea","state","search","filteredUsers","sort","event","newSearch","value","toLowerCase","setState","filtered","filter","item","includes","attributes","getNamedItem","sortedUsers","a","b","reverse","reverseSort","API","then","response","data","results","this","Component","Main","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7099f1a3.chunk.js","sourcesContent":["import React from 'react';\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n      <nav className=\"navbar navbar-bg\">\n        <span className=\"navbar-brand mx-auto h1\">Employee Directory</span>\n      </nav>\n    );\n  }\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Headings(props) {\n  return (\n    <thead className=\"thead\">\n      <tr>\n        {props.headings.map(({ hname, width }) => {\n          return (\n            <th className=\"col\" key={hname} style={{ width }}>\n              {hname}{\" \"}\n              {hname ? (\n                <i\n                  className=\"fas fa-sort\"\n                  data-key={hname}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={props.handleSort}></i>\n              ) : (\n                \"\"\n              )}\n            </th>\n          );\n        })}\n      </tr>\n    </thead>\n  );\n}\n\nexport default Headings;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Table({ users }) {\n    function formatDate(date) {\n        const newDate = date.slice(0, 10);\n        const YYYY = newDate.slice(0, 4);\n        const MM = newDate.slice(5, 7);\n        const DD = newDate.slice(8, 10);\n        const formattedDate = MM + '/' + DD + '/' + YYYY;\n        return formattedDate;\n    }\n\n    return (\n        <tbody>\n            {users[0] !== undefined && users[0].name !== undefined ? (\n                users.map(({ name, login, picture, phone, email, dob }) => {\n                    return (\n                        <tr key={login.uuid}>\n                            <td className=\"align-middle\">\n                                <img\n                                    src={picture.medium}\n                                    alt=\"profile\"\n                                    className=\"img-responsive img\"\n                                />\n                            </td>\n                            <td className=\"align-middle\">\n                                {name.first} {name.last}\n                            </td>\n                            <td className=\"align-middle\">{phone}</td>\n                            <td className=\"align-middle\">\n                                <a href={\"mailto:\" + email} target=\"__blank\">\n                                    {email}\n                                </a>\n                            </td>\n                            <td className=\"align-middle\">{formatDate(dob.date)}</td>\n                        </tr>\n                    );\n                })\n            ) : (\n                <></>\n            )}\n        </tbody>\n    );\n}\nexport default Table;","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchBar({ handleInputChange }) {\n  return (\n    <div className=\"container mt-3\">\n      <div className=\"row col-12 justify-content-center\">\n        <form className=\"form-inline input-group p-1 searchbar\">\n          <input\n            className=\"form-control\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={handleInputChange}\n          />\n          <button\n            className=\"btn btn-outline-success ml-2\"\n            type=\"submit\"\n            onClick={handleInputChange}>\n            <i className=\"fas fa-search\"></i>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\n\nfunction Search({ handleInputChange }) {\n  return <SearchBar handleInputChange={handleInputChange} />;\n}\n\nexport default Search;","import axios from \"axios\";\n\nconst results = 25;\n\nexport default {\n  getUsers: function () {\n    return axios.get(`https://randomuser.me/api/?results=${results}&nat=us`);\n  },\n};","import React, { Component } from \"react\";\nimport Headings from \"./Headings\";\nimport Table from \"./Table\";\nimport Search from \"../../Search\";\nimport API from \"../../../utils/API\";\n\nclass DataArea extends Component {\n  state = {\n    search: \"\",\n    users: [{}],\n    filteredUsers: [{}],\n    sort: \"descend\",\n  };\n\n  headings = [\n    { hname: \"\", width: \"10%\", sort: \"descend\" },\n    { hname: \"Name\", width: \"20%\", sort: \"descend\" },\n    { hname: \"Phone\", width: \"20%\", sort: \"descend\" },\n    { hname: \"Email\", width: \"25%\", sort: \"descend\" },\n    { hname: \"DOB\", width: \"15%\", sort: \"descend\" },\n  ];\n\n  componentDidMount() {\n    API.getUsers().then((response) => {\n      this.setState({\n        users: response.data.results,\n        filteredUsers: response.data.results,\n      });\n    });\n  }\n\n  //Handles input filed when typing in the search box\n  handleInputChange = (event) => {\n    //Grabs search value entered into the search box\n    const newSearch = event.target.value.toLowerCase();\n    //Updates the search state\n    this.setState({ search: newSearch });\n    //Current user list\n    const users = this.state.users;\n    //Filters users to those containing matching values entered in search box\n    const filtered = users.filter(\n      (item) => \n        item.name.first.toLowerCase().includes(newSearch) ||\n        item.name.last.toLowerCase().includes(newSearch) ||\n        item.phone.includes(newSearch) ||\n        item.dob.date.slice(0, 10).includes(newSearch) \n    );\n    //Updates the filtered users to the page\n    this.setState({ filteredUsers: filtered });\n  };\n\n// A-Z first name sort fuctionaility\nhandleSort = (event) => {\n  const users = this.state.users;\n\n  let hname = event.target.attributes\n    .getNamedItem(\"data-key\")\n    .value.toLowerCase();\n  \n    if (this.state.sort === \"descend\") {\n      this.setState({\n        sort: \"ascend\",\n      });\n    } else {\n      this.setState({\n        sort: \"descend\",\n      });\n    }\n\n    if (hname === \"name\") {\n      let sortedUsers = users.sort((a, b) => {\n        if (a.name.first < b.name.first) {\n          return -1;\n        }\n        if (a.name.first > b.name.first) {\n          return 1;\n        }\n        return 0;\n      });\n\n      if (this.state.sort === \"descend\") {\n        reverseSort(sortedUsers);\n      }\n      this.setState({ filteredUsers: sortedUsers });\n    }\n\n    function reverseSort(sortedUsers) {\n      return sortedUsers.reverse();\n    }\n};\n\nrender() {\n  return (\n    <>\n    <Search handleInputChange={this.handleInputChange} />\n    <table className=\"table table-striped table-hover mt-5\">\n      <Headings headings={this.headings} handleSort={this.handleSort} />\n      <Table users={this.state.filteredUsers} />\n    </table>\n    </>\n  );\n}\n}\n\nexport default DataArea;","import React, { Component } from \"react\";\nimport DataArea from \"./DataArea\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <>\n        <DataArea />\n      </>\n    );\n  }\n}","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"text-center fixed-bottom footer\">\n      <div className=\"card-footer\">\n        <small className=\"text-black mx-auto\">\n          &copy; 2020 • All Rights Reserved\n        </small>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}